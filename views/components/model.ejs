<div class="ui grid">
    <div id="" class="sixteen wide column">
        <div class="ui form">
            <div class="inline fields">
                <label>Region</label>
                <div class="field">
                    <div class="ui mini compact menu" >
                        <div class="ui simple dropdown item">
                            <span>{{ selections.regionVal }}</span>
                            <i class="dropdown icon"></i>
                            <div class="menu">
                                <div v-for='item in settings.regions' class="item" :class="{'disabled': item.name != 'Beijing'}" v-on:click='changeRegion(item.name)'>{{ item.name }}</div>
                            </div>
                        </div>
                    </div>
                </div>
                <label>Features</label>
                <div class="field">
                    <div class="ui mini compact menu">
                        <div class="ui simple dropdown item">
                            <span>{{ selections.featureName }}</span>
                            <i class="dropdown icon"></i>
                            <div class="menu">
                                <div v-for='item in settings.features' class="item" v-on:click='changeFeature(item.name, item.value)'>{{ item.name }}</div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- city regions -->
        <!-- <label>Region</label>
        <div class="ui mini compact menu" >
            <div class="ui simple dropdown item">
                <span>{{ selections.regionVal }}</span>
                <i class="dropdown icon"></i>
                <div class="menu">
                    <div v-for='item in settings.regions' class="item" :class="{'disabled': item.name != 'Beijing'}" v-on:click='changeRegion(item.name)'>{{ item.name }}</div>
                </div>
            </div>
        </div>
        <label>Features</label>
        <div class="ui mini compact menu">
            <div class="ui simple dropdown item">
                <span>{{ selections.featureName }}</span>
                <i class="dropdown icon"></i>
                <div class="menu">
                    <div v-for='item in settings.features' class="item" v-on:click='changeFeature(item.name, item.value)'>{{ item.name }}</div>
                </div>
            </div>
        </div> -->
    </div>
    <div id="" class="sixteen wide column">
        <div class="ui form">
            <div class="inline fields">
                <label>Sample rate</label>
                <div class="field" data-tooltip="Sampling rate based on whole data" data-position="top left" data-inverted="">
                    <div class="ui mini radio checkbox">
                        <input type="radio" name="selectrate" value="3" v-model="selections.samplerateVal">
                        <label>1/3</label>
                    </div>
                </div>
                <div class="field" data-tooltip="Sampling rate based on whole data" data-position="top left" data-inverted="">
                    <div class="ui mini radio checkbox">
                        <input type="radio" name="selectrate" value="10" v-model="selections.samplerateVal">
                        <label>1/10</label>
                    </div>
                </div>
                <div class="field" data-tooltip="Decompose approach" data-position="top left" data-inverted="">
                    <button id="tsneBtn" class="ui tiny secondary button" :class="{ 'loading': states.tsnetrain }" v-on:click='tsneTrain'>t-SNE</button>
                </div>
            </div>
        </div>
    </div>
    <!-- decompose approach buttons -->
    <!-- <div id="" class="sixteen wide column">
	<div class="ui form">
		<div class="inline fields">
			<label>{{ selections.decompName }}</label>
			<div v-for='item in settings.decomps' class="field">
				<div class="ui radio checkbox" :class="{'read-only': item.name != 't-SNE'}">
					<input type="radio" name="decomps" :value="item.value">
					<label>{{ item.name }}</label>
				</div>
			</div>
		</div>
	</div>
</div> -->
    <div id="" class="sixteen wide column">
        <div class="ui form">
            <div class="inline fields">
                <label>DBScan eps</label>
                <div class="field" data-tooltip="Maximum radius of the neighborhood from current point" data-position="top left" data-inverted="">
                    <div class="eps ui mini input">
                        <input type="text" type="number" placeholder="EPS..." v-model='selections.dbscaneps'>
                    </div>
                </div>
                <label>minpts</label>
                <div class="field" data-tooltip="Minimum number of points required to form a dense region" data-position="top left" data-inverted="">
                    <div class="ui mini compact menu">
                        <div class="ui simple dropdown item">
                            <span>{{ selections.dbscanminptsName }}</span>
                            <i class="dropdown icon"></i>
                            <div class="menu">
                                <div v-for='item in settings.dbscan.minpts' class="item" v-on:click='changeDBScanInp(item)'>{{ item }}</div>
                            </div>
                        </div>
                    </div>
                </div>
                <button id="clusterBtn" class="ui tiny secondary button" :class="{ 'loading': states.clustertrain }" v-on:click='clusterTrain'>Cluster</button>
            </div>
        </div>
    </div>
</div>